#! -*-sh-*- (colors for emacs)

#################################################################
#
#  An example steering file for Alpos
#
#################################################################



#################################################################
# --------------------------------------------------------------#
#
#  Part I: Global Alpos settings
#
#  Alpos global settings
#
# --------------------------------------------------------------#
ErrorSymmetrization       blabla  # not yet implemented: only hardcoded
GlobalVerbosity           Info    # Possible options: Infom, Debug, Warning, Error
InitSubsets               false   # Init subsets of datasets: true, false




#################################################################
# --------------------------------------------------------------#
#
#  Part II: Datasets 
#
#  Specify 'DataTheorySets', i.e. data-files containing
#  data sets and their corresponding theory class
#
# --------------------------------------------------------------#

DataTheorySets {{
  AlposName                     SteerFile                                                TheoryFunction           CutsAndKeys
# ---------                     ---------                                                --------------           -----------
#  H1ZEUS-HERA-I-NCDISe+p        datafiles/h1zeus/0911.0884/H1ZEUS_NC_e+p_HERA1.dat                ApfelDISCS              Q2>=3.5   
  H1ZEUS-HERA-I-NCDISe+pgt3p5   datafiles/h1zeus/0911.0884/H1ZEUS_NC_e+p_HERA1-Q2.gt.3p5.dat      ApfelDISCS          
  H1ZEUS-HERA-I-NCDISe-p        datafiles/h1zeus/0911.0884/H1ZEUS_NC_e-p_HERA1.dat                ApfelDISCS
  H1ZEUS-HERA-I-CCDISe+p        datafiles/h1zeus/0911.0884/H1ZEUS_CC_e+p_HERA1.dat                ApfelDISCS
  H1ZEUS-HERA-I-CCDISe-p        datafiles/h1zeus/0911.0884/H1ZEUS_CC_e-p_HERA1.dat                ApfelDISCS
}}



#################################################################
# --------------------------------------------------------------#
#
#  Part III: Tasks
#
#  Specify tasks and their name which should be executed by Alpos
#
# --------------------------------------------------------------#
Tasks {{
  TaskType               TaskName       
# --------               --------
  PrintTheorySet	 Print	 	   
#  PrintErrorSummary     PrintErrors          # print errors 
  StatAnalysis	         Stat                  
#   PrintSteering	 PrintSt	 	   
  AFitter		 MyFit		   
  StatAnalysis	         Stat                  
#  SavePDFTGraph          SavePDFTGraph
}}



#################################################################
# --------------------------------------------------------------#
#
#  Part IV: Task parameters
#
#  Specify parameters for each task
#  The parameters must be related to the 'task type' and 
#  must put into a namespace (i.e. '{{{' '}}}') with the
#  'name' of the taks 
#
# --------------------------------------------------------------#

# --------------------------------------------------------------#

SavePDFTGraph {{{
   PDF                  ApfelPDF
   nx                   100
   xmin                 1.e-6
   Q2Values             { 1.9, 3, 4, 5, 10, 100, 6464, 8317, 10000 }
   RootFilename         PDF_Apfel.testroot
}}}

# --------------------------------------------------------------#

MyFit {{{
   Minimizer                    TMinuit  # Minuit2 TMinuit
   PrintLevel                   3 
   Tolerance                    1
   Strategy                     1
   Chisq		        HERAFitterDefault
   # Chisq options:
   #    HERAFitterDefault 
   #    HERAFitterFull
   #    HERAFitterFullImproved
   #    LogNormal
   #    LogNormalNuisance
   #    SimpleNuisance 
   #    ChisqCovariance 
   #    SimpleNuisanceBias 

   FitParameters {
       #       "AlphasMz"
       PDFQ0_HERA.gB    PDFQ0_HERA.gC  
       PDFQ0_HERA.uvB   PDFQ0_HERA.uvC     PDFQ0_HERA.uvE  
       PDFQ0_HERA.dvC  		     
       PDFQ0_HERA.UbarC  
       PDFQ0_HERA.DbarA   PDFQ0_HERA.DbarB  PDFQ0_HERA.DbarC
   }

   # printing
   PrintResults			true
   PrintCovariance		false

}}}


# --------------------------------------------------------------#

Stat {{{
   Chisq		        HERAFitterDefault
   Chisq2        	        LogNormal
   DoChisq                      true
   DoPValue                     true
}}}

# --------------------------------------------------------------#



#################################################################
# --------------------------------------------------------------#
#
#  Part V: Alpos theory settings
#
#  Specify 'theory' parameters
#  These consists fo
#     + functions
#     + parameters
#
#  A theory function takes parameters and/or other functions
#  as input to calculate output value(s), as for instance 
#  cross sections (or PDFs). A parameter obviously always returns
#  its value.
#  
#  Parameters can be made 'identical' by setting one value to
#  the other, e.g.:
#    AlphasMZ         AsMz
#  This does not only 'copy' the value of the parameter, but also
#  if the parameter is changed during the run, both parameters
#  are updated simultaneously. If only the 'starting' value
#  should be identical, then one could use the 'read_steer' feature
#    AlphasMZ         ${AsMz}
#
#  Any function requires a particular set of input paramters,
#  which can be looked up in the .cc file.
#  The 'default' values can be specified like:
#    <functiontype>.<parametername>    value
#  
#  A particular instantiation of a function takes the default 
#  parameters. These may be replaced for each instance
#  of a function by setting them explicitly, like e.g.:
#    <functionname>.<parametername>    value
#       
#  By that, multiple instances of functions with different input
#  parameters may be defined.
#
#  Some functions have 'integration' parameters, which have to
#  set to a dummy value, like for instance a renormalization or
#  factorization scale:
#     QcdnumPDF.muf		       100
#
#  Please see the documentation of the individual functions for 
#  more details on the parameters.
#
#  If the functions have a (non-object-oriented) implementation
#  with e.g. fortran, one typically has a 'Init'-function, which 
#  then is required by the actual function as input.
#  
#  If a function is accesses during runtime, which is not 
#  initialized, this will cause a 'purely virtual function call' 
#  error.
#
# --------------------------------------------------------------#


AlposTheory {{{

# --------------------------------------------------------------#
#   Specify used functions.
#   Give them a 'name' and specify the class
# --------------------------------------------------------------#
InitFunctions {{
   FunctionName          FunctionType         # one line here! (header of 'table')
    ApfelInit             ApfelInit
    PDFQ0_HERA            PDFQ0_HERA
    ApfelPDF              ApfelPDF
}}



# --------------------------------------------------------------#
# Useful parameter shorthand notations
# --------------------------------------------------------------#
iOrd                        1
AlphasMz		    0.11760001 #0.1180000012
mZ                          91.1876


# --------------------------------------------------------------#
# Useful parameter shorthand notations
# --------------------------------------------------------------#
Pi                               3.1415

# --------------------------------------------------------------#
# Apfel PDF
ApfelPDF.ApfelInit                 ApfelInit
ApfelPDF.xp                        0.1 #dummy
ApfelPDF.muf                       100 #dummy

# --------------------------------------------------------------#
# Apfel
ApfelDISCS.ApfelInit               ApfelInit
ApfelDISCS.e-polarity              0
ApfelDISCS.e-charge                0

# --------------------------------------------------------------#
# Apfel
ApfelInit.iOrd                     iOrd
ApfelInit.Q0                       1.3784048 #1.41421  #sqrt(1.9)=1.3784
ApfelInit.nf                       0  #the Fixed-Flavour Number Scheme with 'nf' active flavours. 0 denotes VFNS
ApfelInit.PDFQ0                    PDFQ0_HERA #PDFQ0_LHAPDF
ApfelInit.theory                   "QCD"  # the theory to be used in the evolution: (theory = 'QCD','QED','QUniD', default 'QCD')
ApfelInit.QCDRefAs                 AlphasMz  # reference values of alphas at the scale 'QCDRefQRef' [GeV] to alpharef
ApfelInit.QCDRefQRef               mZ #1.41421356
ApfelInit.QEDRefAem                7.496252e-3 # reference values of alpha (em) at the scale 'QEDRefQRef' [GeV] to alpharef
ApfelInit.QEDRefQRef               1.777 
ApfelInit.LambdaQCDRef             0.220 # value of LambdaQCD [GeV] with 'nref'flavours to 'lambdaref' (default '0.220')
ApfelInit.LambdaQCDnref            5     # value of LambdaQCD [GeV] with 'nref'flavours to 'lambdaref' (default '5')
ApfelInit.mc                       1.4   # pole mass
ApfelInit.mb                       4.75   # pole mass
ApfelInit.mt                       175   # pole mass
ApfelInit.mcMSbar                  ApfelInit.mc
ApfelInit.mbMSbar                  ApfelInit.mb
ApfelInit.mtMSbar                  ApfelInit.mt           
ApfelInit.mtau                     1.777
ApfelInit.EnableMassRunning        1 # dis/en-ables the running of the MSbar masses
ApfelInit.MaxFlavourAlpha          5 # maximum number of active flavours in the couplings evolution (including the masses)
ApfelInit.MaxFlavourPDFs           5 # maximum number of active flavours in the PDF evolution (default 'nf' = 6)
ApfelInit.RenFacRatio              1 
ApfelInit.SmallxResummation        0 # 'LL', 'NLL' or 0 to disable Small x resummation
ApfelInit.AlphaEvolution           "exact" # solution of the beta function equations for the running couplings ('evol' = 'exact','expanded','lambda')
ApfelInit.PDFEvolution             "exactalpha" #sets the solution of the DGLAP equations for PDFs ('evolp' = 'exactmu', 'expandalpha', 'expandalpha')
ApfelInit.QLimitMin                0.5 #range where it is possible to perform the evolution
ApfelInit.QLimitMax                1000 #
ApfelInit.FastEvolution            1 # fast PDF evolution (default 1)
ApfelInit.EnableLeptonEvolution    0 # enables the evolution of the lepton PDFs when the fast QUniD is used (default false).
ApfelInit.mZ                       mZ  # mass of Z boson
ApfelInit.mW                       80.385   # mass of W boson
ApfelInit.Gf                       1.16638e-5   # g Fermi
ApfelInit.MassScheme               ZM-VFNS # mass scheme for structure functions ('ZM-VFNS', 'FFNS', 'FONLL-A', 'FONLL-B', 'FONLL-C')
ApfelInit.nGridPts0                60 # number of grid points for grid 0 (x>5.e-6)
ApfelInit.nGridPts1                30 # number of grid points for grid 1 (x>1.e-1) 
ApfelInit.nGridPts2                0 # number of grid points for grid 2 (x>8.e-1)
				   
ApfelInit.SinThetaW                0.23126 # weinberg angle 
ApfelInit.TargetMassCorrections    0  


# --------------------------------------------------------------#
# PDFQ0_HERA (full)  
# --------------------------------------------------------------#
PDFQ0_HERA.iPDF                           0 # dummy
PDFQ0_HERA.xp                             0.1  # dummy

PDFQ0_HERA.fs                             0.31

PDFQ0_HERA.gA                             0 # take from sumrules
PDFQ0_HERA.gB                             0.21385
PDFQ0_HERA.gC                             9.0138
PDFQ0_HERA.gD                             0
PDFQ0_HERA.gE                             0
PDFQ0_HERA.gF                             0
PDFQ0_HERA.gAP                            0
PDFQ0_HERA.gBP                            0
PDFQ0_HERA.gCP                            0

PDFQ0_HERA.uvA                            0 # take from sumrules
PDFQ0_HERA.uvB                            0.66559 
PDFQ0_HERA.uvC                            4.6522 
PDFQ0_HERA.uvD                            0 
PDFQ0_HERA.uvE                            9.6938 
PDFQ0_HERA.uvF                            0 

PDFQ0_HERA.dvA                            0 # take from sumrules
PDFQ0_HERA.dvB                            PDFQ0_HERA.uvB
PDFQ0_HERA.dvC                            4.2914 
PDFQ0_HERA.dvD                            0 
PDFQ0_HERA.dvE                            0 
PDFQ0_HERA.dvF                            0 

PDFQ0_HERA.UbarA                          0 # take from sumrules
PDFQ0_HERA.UbarB                          PDFQ0_HERA.DbarB   
PDFQ0_HERA.UbarC                          2.5820  
PDFQ0_HERA.UbarD                          0   
PDFQ0_HERA.UbarE                          0   
PDFQ0_HERA.UbarF                          0   
PDFQ0_HERA.DbarA                          0.16261   
PDFQ0_HERA.DbarB                          -0.16511   
PDFQ0_HERA.DbarC                          2.4048   
PDFQ0_HERA.DbarD                          0   
PDFQ0_HERA.DbarE                          0   
PDFQ0_HERA.DbarF                          0   
PDFQ0_HERA.seaA                           0
PDFQ0_HERA.seaB                           0
PDFQ0_HERA.seaC                           0
PDFQ0_HERA.seaD                           0 
PDFQ0_HERA.seaE                           0
PDFQ0_HERA.seaF                           0



}}} # end of 'AlposTheory' namespace
# --------------------------------------------------------------#

